spring.application.name=observability-spring
server.port=8080

# H2 Console settings (optional, for easy DB inspection during development)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# === OpenTelemetry Configuration ===
# Service name for OpenTelemetry
otel.service.name=observability-spring

# OTLP Exporter configuration (common endpoint for traces, metrics, logs)
# This sends to the OTel Collector, which then routes to Jaeger, Prometheus, Grafana
otel.exporter.otlp.endpoint=localhost:4317
otel.exporter.otlp.protocol=grpc
#otel.exporter.otlp.protocol=http/protobuf

# Traces configuration
otel.traces.exporter=otlp # Export traces using OTLP
# otel.propagators=tracecontext,baggage # Default propagators

# Metrics configuration
otel.metrics.exporter=otlp # Export metrics using OTLP
# If you want the app to also expose a prometheus scrape endpoint directly:
# management.endpoint.prometheus.enabled=true
# management.endpoints.web.exposure.include=health,info,prometheus
# However, with OTel collector, sending metrics via OTLP to collector is common.
# The collector then exposes a scrape endpoint for Prometheus.

# Logs configuration (OpenTelemetry Appender)
otel.logs.exporter=otlp # Export logs using OTLP
# Configure Logback/Log4j2 to use OpenTelemetry appender if not auto-configured by starter.
# For Spring Boot, the starter often handles this.
# The logging pattern below is for console logs to include trace/span IDs.
# For OTLP logs, the context is usually propagated automatically.

# Logging pattern for console output to include trace and span IDs
logging.pattern.level=%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}] %m%n

# Spring Boot Actuator endpoints exposure
management.endpoints.web.exposure.include=health,info,prometheus
# Prometheus endpoint is useful for verifying metrics locally, even if OTel collector is primary.
management.endpoint.health.show-details=always
