global:
  scrape_interval: 15s # Default is 15s.

scrape_configs:
  - job_name: 'otel-collector'
    scrape_interval: 10s
    static_configs:
      - targets: ['otel-collector:8889'] # Scrape metrics from OpenTelemetry Collector

  - job_name: 'spring-boot-app' # If Spring Boot app exposes Prometheus endpoint directly
    scrape_interval: 10s
    metrics_path: '/actuator/prometheus'
    static_configs:
      # Use 'host.docker.internal' for reaching host machine from Docker on Win/Mac if app runs outside compose
      # If app runs within compose, use its service name e.g., 'observability-spring-app:8080'
      # For now, assuming app runs outside compose and is accessible via host.docker.internal
      # This might need adjustment based on how the Spring Boot app is run.
      # If the Spring app itself is containerized in this docker-compose, this target would be 'app_service_name:port'
      - targets: ['host.docker.internal:8080'] # Target Spring Boot app on the host
    # For a Spring Boot app running *inside* Docker Compose, you'd use:
    # - targets: ['observability-spring-app:8080'] # Assuming your app service is named 'observability-spring-app'
