receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:

exporters:
  logging:
    loglevel: debug

  prometheus:
    endpoint: "0.0.0.0:8889" # Prometheus will scrape this
    # namespace: "observabilityspring" # Optional: prefix metrics with a namespace

  otlp/to_jaeger:
    endpoint: "jaeger:4317" # Send traces to Jaeger
    tls:
      insecure: true # Jaeger all-in-one runs without TLS by default

  # OTLP exporter for logs to Grafana (Grafana has built-in OTLP log ingestion)
  otlphttp/grafana:
    endpoint: "http://grafana:3000/otlp" # Grafana's OTLP HTTP endpoint for logs
    tls:
      insecure: true # Assuming Grafana is on HTTP within Docker network

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging, prometheus]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging, otlphttp/grafana] # Send logs to Grafana via OTLP
