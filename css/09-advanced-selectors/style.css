/*
 * Step 9: Advanced Selectors
 */
body {
    font-family: Arial, sans-serif;
    padding: 1rem;
    background-color: #f4f4f4;
}

h1 {
    color: #3498db;
    text-align: center;
    margin-bottom: 5rem;
}

/* =========================================================================
 * 9.1: The `:is()` Selector
 * `is()` allows you to group multiple selectors for conciseness.
 * ========================================================================= */
.card-list {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    margin-top: 2rem;
}

.card {
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
}

/* We use `:is()` to apply the same rule to multiple selectors. */
.card:is(.card--secondary, .card--link) {
    color: white;
    text-align: center;
}

.card--primary {
    background-color: #3498db;
}

.card--secondary {
    background-color: #7f8c8d;
}

.card--link {
    background-color: #2ecc71;
    text-decoration: none;
}

.card:hover {
    transform: translateY(-5px);
}

/* We use `:is()` to apply the hover effect to card types. */
.card-list :is(.card--primary, .card--secondary):hover h3 {
    text-decoration: underline;
}

/* =========================================================================
 * 9.2: The `:has()` Selector
 * `has()` is a "relative" pseudo-class. It selects a parent based on its content.
 * ========================================================================= */
.has-container {
    padding: 1.5rem;
    border: 2px solid #ccc;
    margin: 1rem auto;
    width: 300px;
    background-color: white;
}

.has-container p {
    font-weight: normal;
    color: #333;
}

/* `:has(img)` selects `.has-container` only if it contains an `img` element. */
.has-container:has(img) {
    background-color: #f1c40f;
    border-color: #e67e22;
}

/* `:has(img)` lets us style the child of the parent. */
.has-container:has(img) p {
    font-weight: bold;
    color: #e67e22;
}