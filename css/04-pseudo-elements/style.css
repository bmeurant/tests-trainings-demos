/*
 * Step 4: CSS Pseudo-elements
 * This stylesheet is built progressively.
 */
body {
    font-family: Arial, sans-serif;
    padding: 1rem;
}

h1 {
    text-align: center;
    color: #3498db;
}

h2 {
    color: #2c3e50;
    margin-top: 2rem;
}

/* =========================================================================
 * 4.1: `::before` and `::after` Basics
 * They are used to insert content before or after a selected element's content.
 * They MUST have a `content` property to be rendered.
 * ========================================================================= */
.step-4-1 .card {
    position: relative;
    width: 300px;
    margin: auto;
    padding: 2rem;
    background-color: #ecf0f1;
    border: 2px solid #3498db;
    text-align: center;
    overflow: hidden; /* To keep the pseudo-elements within the card's bounds */
}

/* The `::before` pseudo-element adds a decorative element at the top-left */
.step-4-1 .card::before {
    content: "New";
    position: absolute;
    top: -10px;
    left: -10px;
    background-color: #e74c3c;
    color: white;
    padding: 0.5rem 1rem;
    font-size: 0.8rem;
    text-transform: uppercase;
    transform: rotate(-45deg) translate(-25px, -25px); /* To create a stylish ribbon effect */
}

/* The `::after` pseudo-element adds a simple decorative circle at the bottom-right */
.step-4-1 .card::after {
    content: "";
    position: absolute;
    bottom: -25px;
    right: -25px;
    width: 50px;
    height: 50px;
    background-color: #2ecc71;
    border-radius: 50%;
}

/* =========================================================================
 * 4.2: Hover Effects
 * Pseudo-elements are perfect for creating clean, animated effects on hover.
 * We use `transform` and `transition` for smooth animations.
 * ========================================================================= */
.step-4-2 {
    margin-top: 2rem;
}

.step-4-2 .card {
    text-align: center;
}

.button {
    position: relative;
    display: inline-block;
    padding: 1rem 2rem;
    margin: 1rem;
    font-size: 1.2rem;
    color: white;
    text-decoration: none;
    overflow: hidden;
    cursor: pointer;
    border-radius: 5px;
}

/* --- Button 1: Underline effect on hover --- */
.button-1 {
    background-color: #3498db;
}

.button-1::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background-color: white;
    transform: scaleX(0); /* Initially hidden */
    transform-origin: bottom left; /* Animation starts from the left */
    transition: transform 0.3s ease;
}

.button-1:hover::after {
    transform: scaleX(1); /* Stretches to full width on hover */
}

/* --- Button 2: Fade-in background on hover --- */
.button-2 {
    background-color: #e74c3c;
    border: 2px solid #e74c3c;
    color: white;
}

.button-2::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.2);
    opacity: 0; /* Initially hidden */
    transition: opacity 0.3s ease;
    z-index: 0;
}

.button-2:hover::before {
    opacity: 1; /* Fades in on hover */
}

/* Make sure the text is on top of the pseudo-element */
.button-2 span {
    position: relative;
    z-index: 1;
}