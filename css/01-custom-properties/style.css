/*
 * Step 1: CSS Custom Properties (Variables)
 * This stylesheet is built progressively.
 * Each section corresponds to a step in the tutorial.
 */

/* =========================================================================
 * Global Definitions
 * These variables are declared on the :root pseudo-class,
 * making them available throughout the entire document.
 * ========================================================================= */
:root {
    --primary-color: #3498db;
    --background-color: #ecf0f1;
    --text-color: #34495e;
    --font-size-base: 16px;
    --spacing-unit: 1rem;
}

body {
    font-family: Arial, sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    font-size: var(--font-size-base);
    line-height: 1.6;
    margin: 0;
    padding: var(--spacing-unit);
}

h1 {
    text-align: center;
    color: var(--primary-color);
}

h2 {
    color: var(--primary-color);
}

/* =========================================================================
 * 1.1: Basic Declaration and Usage
 * This section demonstrates how to use global variables.
 * ========================================================================= */
.step-1-1 {
    padding: var(--spacing-unit) calc(var(--spacing-unit) * 2);
    border-bottom: 2px solid var(--primary-color);
    margin-bottom: 2rem;
}

/* =========================================================================
 * 1.2: Variable Scoping
 * CSS variables cascade. A new variable definition on a specific element
 * will override the value from a parent selector for that element and its children.
 * ========================================================================= */
.step-1-2 {
    padding: 2rem;
}

.card {
    background-color: white;
    padding: calc(var(--spacing-unit) * 1.5);
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    max-width: 400px;
    margin: auto;
}

.card-highlight {
    --highlight-color: #e74c3c;
    --primary-color: var(--highlight-color);
    border: 1px solid var(--primary-color);
    padding: var(--spacing-unit);
    margin-top: var(--spacing-unit);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-unit);
}

.card-highlight p {
    color: var(--primary-color);
}

/* =========================================================================
 * 1.3: Dynamic Variables with JavaScript
 * The HTML and CSS for this section are now much simpler.
 * ========================================================================= */
.step-1-3 {
    padding: 2rem;
    border-top: 2px solid var(--primary-color);
}

.step-1-3 p {
    margin-bottom: 0.5rem;
}

/* We define a base style for all buttons to avoid repetition. */
button {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    cursor: pointer;
    color: white;
    border: none;
    border-radius: 4px;
    transition: background-color 0.3s ease;
}

/* The global button uses the global variable. */
#changeGlobalColorBtn {
    background-color: var(--primary-color);
}

/* The local button now uses the local variable defined in its parent. */
#changeLocalColorBtn {
    background-color: var(--primary-color);
}

button:hover {
    filter: brightness(1.2);
}