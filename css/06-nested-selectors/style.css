/*
 * Step 6: Nested Selectors
 */
body {
    font-family: Arial, sans-serif;
    padding: 1rem;
}

h1 {
    text-align: center;
    color: #3498db;
}

/* =========================================================================
 * 6.1: Basic Usage
 * This example shows how to nest child selectors inside parent selectors.
 * ========================================================================= */
.step-6-1 {
    padding: 2rem;
    background-color: #ecf0f1;

    h2 {
        color: #2c3e50;
        margin-top: 0;
    }

    .card {
        text-align: center;
        padding: 1.5rem;
        background-color: white;
        border: 2px solid #bdc3c7;
        border-radius: 8px;

        p {
            font-style: italic;
        }

        .button {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            background-color: #3498db;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 1rem;

            &:hover {
                background-color: #2980b9;
            }
        }
    }
}

/* =========================================================================
 * 6.2: Advanced Usage with `&`
 * This shows how to target sibling selectors and pseudo-classes.
 * ========================================================================= */
.step-6-2 {
    padding: 2rem;
    background-color: #ecf0f1;
}

.list-container {
    text-align: center;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 1.5rem;
    background-color: white;
    border: 2px solid #bdc3c7;
    border-radius: 8px;
    margin: auto;

    .list-item {
        display: block;
        padding: 0.75rem 1.5rem;
        background-color: #f1c40f;
        color: white;
        text-decoration: none;
        border-radius: 4px;
        transition: background-color 0.3s ease;

        /* Using `&` to target the hover state of `.list-item` */
        &:hover {
            background-color: #f39c12;
        }

        /* Using `&` to target the focused state of `.list-item` */
        &:focus {
            outline: 2px solid #e67e22;
        }

        /* Using `&` and `+` to target the `p` element that immediately follows `.list-item` */
        & + p {
            margin-top: 1rem;
            font-weight: bold;
            color: #e67e22;
        }
    }
}