# Defines the port this microservice will listen on. Each service will have its own port.
server.port=8081

# This is the name under which this service will register with Eureka.
spring.application.name=product-service

# Configuration H2 Database

# Enables the H2 web console to view the database.
spring.h2.console.enabled=true

# Connection URL for the H2 database. "mem" means in-memory.
spring.datasource.url=jdbc:h2:mem:productdb

# JDBC driver for H2.
spring.datasource.driverClassName=org.h2.Driver

# Username for the H2 database.
spring.datasource.username=sa

# Password for the H2 database.
spring.datasource.password=password

# Tells JPA (via Hibernate) to use the H2 dialect.
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# JPA's strategy for creating/updating the database schema. "update" tries to modify the existing schema without deleting it.
spring.jpa.hibernate.ddl-auto=update

# Eureka Client Configuration

# Tells this service where to find the Eureka server.
eureka.client.service-url.default-zone=http://localhost:8761/eureka

# Configuration de Micrometer Tracing pour Zipkin

# Why? Traces 100% of requests (for demo purposes).
management.tracing.sampling.probability=1.0

# Why? The URL of the Zipkin endpoint to send spans to.
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
